
시멘틱 웹 태그
    <div></div> ? 구역 

    전세계에 만들어진 웹 사이트가 증가함에 따라
    검색엔진이 사용자가 요구하는 정확하고 가치있는 정보를 탐색하기 위해 요구하는 사항이 증가
    따라서 검색엔진이 해당 웹 사이트의 정보를 더 쉽게 알 수 있도록 태그에 해당 태그의 역할을 통해 이름을 지어주는 것

    장점
        (1) 웹 접근성
            웹 사이트를 사용하는 어떤 누구라도 평등하게 접근할 수 있도록 
            접근성 자체를 높이는 행위

        (2) 검색 엔진 최적화 (SEO)
        (3) 가독성
            <div>
                ...
            </div>
            <div>
                ...
            </div>
            <div>
                ...
            </div>
            ----------------------------------------------------------------------------------------------------------

            <header>
                ....
            </header>
            <main>
                ....
            </main>
            <footer>
                ....
            </footer>

            ------------------------------------------------------------------------------------------------------------

            (1). header
                제목, 로고, 검색창, 사용자정보, 메뉴(nav)

            (2). main
                해당 웹사이트의 주된 컨텐츠

            (3). footer
                일반적으로 웹페이지의 최하단, 회사 정보, 저작권 정보

            (4). section
                한 문서의 구역을 나타냄
                적합한 뜻을 갖지 않을 때 사용하는 태그

            (5). nav
                다른 페이지로의 링크 (메뉴, 목차, 색인)등에 사용

            (6). article
                웹페이지에서 반복 및 재사용될 수 있는 구간
                ex) 상품 목록, 게시판의 글, 매거진이나 글 등

            (7). aside
                주된 컨텐츠와 간접적으로 연결되는 부분
                ex) 사이드바, 사이드 메뉴   

            ------------------------------------------------------------------------------------------------------------
            
            table
                - 여러 종류의 데이터를 구분하여 보기 쉽게 정리해주는 일종의 표

                ex)
                    <table>
                        <caption> </caption>---표이동 (option)
                    <thead> --- 제목행 (option)
                        *<tr> --- 가로, 행
                            *<th></th> --- 중앙 정렬, 굵게, 칸, 열.(제목열) 테이블 헤더
                            *<td></td> --- 칸,열.(일반열) 테이블 데이터
                            

                        </tr>
                    </thead>
                    <tbody> --- 본문 (option)
                    
                    </tbody>
                    <tfoot> --- 주석, 색인, 참조, 계 (option)

                    </tfoot>

                    </table>
            ------------------------------------------------------------------------------------------------------------
           
            datalist
                검색이 가능한(미리보기)가 가능한 input(사용자 입력) 태그

                ex)
                <input type = "text" list= "datalist 태그의 id 속성값"/>

                <datalist id = "속성값">
                    <option></option>
                    <option></option>
                </datalist>

            form
                사용자의  입력을 웹브라우저에서부터 백엔드에 데이터를 요청할 때 사용
                그러나 반드시 사용해야 하는 것은 아님

                key point
                    (1) action
                    (2) method
                    (3) submit(onSubmit)

                    form은 제출 버튼이 눌러지거나 onSubmit 이벤트가 발생했을 때
                    action의 form안에 작성된 사용자 입력(input) 데이터를 전송

                    action은 form submit 되었을 때 데이터가 향하는 주소, 경로
                    method는 데이터 전송 방식

                    JSP와 같은 웹 서블릿이 아니라면
                    action과 method는 현재 거의 사용하지 않는 속성

                    그러나 form 태그가 사랑받고 있는 가장 큰 이유는
                    submit 이벤트가 되었을떄 form안의 input요소의값을
                    가져올 수 있고, Enter가 눌러졌을 떄 submit을 자동으로 실행하기 때문에
                    현재도 Enter를 사용해야하는 경우 form 태그를 자주 애용
                    
                    *method
                    
                        GET
                            - 주소에 데이터를 실어서 전달하는 방식
                        POST
                            - http request messege의 body 안에 데이터를 실어서 전달하는 방식
           
            iframe
                외부 링크 사이트를 현재 사이트내에사 보여주기 위한 태그

            ------------------------------------------------------------------------------------------------------------
           
            www.seongyong.com./api.user/signup (백엔드서버 주소)

            이메일
            비밀번호

            (1) GET (조회)
            www.seongyong.com./api.user/signup.email=ricky0130@naver.com&&user_password=1234;
            www.musinsa.com/color=red


            (2) POST(저장)
            www.seongyong.com./api.user/signup
            head (보안, 데이터 종류, config)
            body (데이터 부분)

            수정 삭제(put,patch,delete...)

            ------------------------------------------------------------------------------------------------------------






