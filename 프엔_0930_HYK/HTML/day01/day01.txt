----- 오리엔테이션
- 김성용 강사
- email : korpg95274@gmail.com
- 메일 제목 : "프론트엔드 주말 오전 홍윤기"
- 메일 내용 : 오류내용, 작성한 코드, 캡쳐본
- 수업 자료 : 오픈 단톡방(실명으로)


- 수업 방식 : 이론 -> 예제 ->과제


================================

* 동료 학습 ( *조활동 )
평일반에 있는 사람들은 불가능.

================================

* 추천 공부 방식
개념강의 => 정 모르는 부분 강의 복습, 텍스트 파일 복습
=> 모르는 부분을 검색 => 그럼에도 개념이 부족한 부분은 강사에게 질문(복습)

-----개념을 최대한 빨리 잡고 넘어갈 수 있음

** 구현과 설계 (공부)

-- 빠르게 타자 쳐야함!!
                  
================================

* 일정

1개월 차~6개월 차

1개월 HTML + CSS
2개월 CSS + JS + GIT + 호스팅(deply)
3개월 JS
4개월 REACT
5개월 REACT + NODE(DBMS, LOGIN, 게시물)
6개월 REACT + TYPESCRIPT + TEXTCODE(TDD)

============== ==================

UI, UX

UI (USER INTERFACE)
- 사용자가 보는 화면
    ex) 입력창, 이미지, 폰트, 색상, 글, 그림, 버튼 .....

UX (USER EXPERIENCE)
 - 사용자 경험, 사용자가 어플리케이션을 이용함으로서 느낄 수 있는 만족감
   ex) 회원가입을 하는 동안 사용자가 그 과정에서 느끼는 불편함이 없는가?

=> 즉, UX,UI를 고려한다는 것은 사용자가 보고있는 화면이
     어플리케이션을 이용했을 떄 불편함이나 제약 사항이 없는지 고려해 만든다는 것






================================

*프론트엔드
? 화면, 보이는 것, 볼 수 있는 것
화면에서 사용자가 눌렀을때 나오는 모든것.
서버(백엔드)에 정보를 요청(CreateReadUseDevelop)하는것, 그것을 가공해서 사용자에게 주는 것.


*백엔드
? 그 뒤편 어딘가...안보이는 것.

BFF (Backend for Frontend)


================================

*프론트엔드

*퍼블리셔

================================

request, respose

================================

사용자 - 브라우저 열기 - 주소창url입력  - 회원가입 - 값 입력 - 회원가입완료
      
*프론트엔드
사용자가 보는 화면 및 행위에 관한 코드를 작성하고
사용자의 행위에 따라 백엔드에게 요청

*백엔드 
사용자가 요청한 데이터를 가지고 DB(데이터저장소)에서
사용자가 요청한 값에 맞게 데이터를 처리하고 결과값 전송

*프론트엔드
전달받은 결과(데이터)를 사용자가 볼 수 있게 가공

* 백엔드
서버를 운영하고 트래픽을 처리 ( devops ) + (Finops)

================================

* 퍼블리셔 
    :HTML, CSS 및 JS DOM, API를 활용하여
   사용자가 보는 UI,UX를 고려해 레이아웃을 개발

* 프론트엔드 개발자
   : 데이터를 통신하여  사용자에 행위에 따라 데이터를 처리
   프론트엔드 서버 처리 (랜더링 최적화)

================================

* request., responce

웹페이지
------------------------------------------------>프론트서버
요청,request
-------------------------------------------------리소스
         응답,response
*HTTP(Hyper Text Transfer Protocool)
ex) https:/~~~~~.com

인터넷상에서 서버끼리 데이터를 주고 받을 수 있도록
사용하는 규칙의 일종으로 앞에 s의 여부는 보안적 요소가 추가되었는가의 차이

url죽소에= http를 붙이면 나는 이 규약을 사용하여 request와 response를 주고 받겠다.
따라서 http를 활용한 req,res를 http request message http response message
라고 한다.






================================

* vscode ( 코드 에디터 툴)
html은 메모장이나 글을 작성할 곳 어디든 사용이 가능
자동완성, 자동줄바꿈과 같은 다양한 플러그인을 제공하고 사용하기 편한 GUI를 제공하는

* vscode 유용한 플러그인 설치

================================












   